/* ============================================================================
   global.scss  — safe baseline + scoped fixes
   ============================================================================ */

/* --- Ionic core + utilities (required) ------------------------------------ */
@import "@ionic/angular/css/core.css";
@import "@ionic/angular/css/normalize.css";
@import "@ionic/angular/css/structure.css";
@import "@ionic/angular/css/typography.css";
@import "@ionic/angular/css/display.css";

/* Optional Ionic utility imports */
@import "@ionic/angular/css/padding.css";
@import "@ionic/angular/css/float-elements.css";
@import "@ionic/angular/css/text-alignment.css";
@import "@ionic/angular/css/text-transformation.css";
@import "@ionic/angular/css/flex-utils.css";

/* --- App-wide base (safe; no structural overrides of Ionic components) ---- */
html, body, ion-app, ion-content {
  background: var(--ion-background-color);
  color: var(--ion-text-color);
}

/* Smoother text rendering */
html {
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

/* Remove any accidental list bullets from custom content */
ul, ol { margin: 0; padding-left: 1.25rem; }

/* ============================================================================
   IMPORTANT: We intentionally DO NOT change layout of Ionic components here.
   The following risky patterns have been removed (do not re-add globally):
   - ion-item { display: block; }             // breaks internal flex row
   - ion-label { width: 100%; }               // causes end-slot to collapse
   - ion-item { --inner-padding-end: 0; }     // robs space from the end slot
   If you need tighter rows on a specific page, scope it (see below).
   ============================================================================ */

/* --- Page-scoped styling for the Settings page list ----------------------- */
/* Only affects the main Settings list, NOT modals */
.settings-container ion-item {
  /* You can keep your tighter look here without affecting modals */
  /* Example: uncomment if desired */
  /* --inner-padding-end: 0; */
}

/* --- Scoped fix for the TTS modal layout ---------------------------------- */
/* Prevent end-slot controls from collapsing only inside the TTS modal */
ion-modal app-tts-modal ion-item::part(inner) {
  display: flex !important;        /* ensure proper flex row */
  align-items: center;
  justify-content: space-between;  /* guarantees space for end slot */
  gap: 12px;
}

/* Label grows but can’t steal the whole row */
ion-modal app-tts-modal ion-item > ion-label {
  flex: 1 1 auto;
  min-width: 0;
}

/* End-slot controls: reserve footprint so they never shrink to 0 */
ion-modal app-tts-modal ion-select[slot="end"] {
  flex: 0 0 auto;
  min-width: 160px;                /* adjust to taste */
}
ion-modal app-tts-modal ion-toggle[slot="end"] {
  flex: 0 0 auto;
  min-width: 72px;                 /* typical toggle width */
}

/* Ranges (when you add them back): span the row reliably */
ion-modal app-tts-modal ion-range {
  flex: 1 1 0;
  min-width: 0;
  height: 44px;                    /* visible touch target */
}

/* Optional: ensure select/toggle look good regardless of theme variables */
ion-modal app-tts-modal ion-select::part(text),
ion-modal app-tts-modal ion-select::part(placeholder) {
  color: var(--ion-text-color, #111);
  opacity: 1;
}
ion-modal app-tts-modal ion-select::part(icon) {
  color: var(--ion-text-color, #111);
}
ion-modal app-tts-modal ion-toggle::part(track) {
  background: color-mix(in srgb, var(--ion-text-color, #111) 20%, transparent);
}
ion-modal app-tts-modal ion-toggle.toggle-checked::part(track) {
  background: color-mix(in srgb, var(--ion-color-primary, #428cff) 55%, transparent);
}
ion-modal app-tts-modal ion-toggle::part(handle) {
  background: #fff;
}

/* --- Small quality-of-life tweaks (safe) ---------------------------------- */
ion-button[fill="outline"] {
  --border-width: 2px;
}

/* --- Fullscreen modal utility -------------------------------------------- */
/* Applied from Settings via cssClass: 'modal-fullscreen' */
ion-modal.modal-fullscreen {
  /* Make the modal occupy the full viewport */
  --height: 100%;
  --max-height: 100%;
  --width: 100%;
  --border-radius: 0;
}

/* Ensure the shadow DOM content stretches fully */
ion-modal.modal-fullscreen::part(content) {
  height: 100%;
}

/* Optional: make inner ion-content fill too, in case components rely on it */
ion-modal.modal-fullscreen ion-content {
  height: 100%;
}
