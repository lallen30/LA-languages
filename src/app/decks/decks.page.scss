// Header button styling
ion-header ion-buttons {
  ion-button {
    margin: 0 4px;
    
    // Circular buttons (refresh and import)
    &[fill="clear"] {
      --border-radius: 50%;
      --padding-start: 12px;
      --padding-end: 12px;
      --padding-top: 12px;
      --padding-bottom: 12px;
      width: 40px;
      height: 40px;
      
      ion-icon {
        font-size: 22px;
      }
      
      // Hover effect
      &:hover {
        --background: rgba(var(--ion-color-primary-rgb), 0.1);
      }
      
      // Active/pressed state
      &:active {
        --background: rgba(var(--ion-color-primary-rgb), 0.2);
      }
    }
    
    // Circular button (add button) - matches other buttons
    &:not([fill="clear"]) {
      --border-radius: 50%;
      --padding-start: 12px;
      --padding-end: 12px;
      --padding-top: 12px;
      --padding-bottom: 12px;
      width: 40px;
      height: 40px;
      
      ion-icon {
        font-size: 24px;
      }
      
      // Enhanced circular shadow for primary button
      box-shadow: 0 2px 8px rgba(var(--ion-color-primary-rgb), 0.3);
      border-radius: 50%;
      
      // Hover effect
      &:hover {
        transform: translateY(-1px);
        box-shadow: 0 4px 12px rgba(var(--ion-color-primary-rgb), 0.4);
      }
      
      // Active/pressed state
      &:active {
        transform: translateY(0);
        box-shadow: 0 2px 6px rgba(var(--ion-color-primary-rgb), 0.3);
      }
    }
  }
}

.decks-container {
  padding: 16px;
  min-height: 100%;
}

.loading-container {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  height: 200px;
  
  ion-spinner {
    margin-bottom: 16px;
  }
  
  p {
    color: var(--ion-color-medium);
  }
}

.decks-list {
  margin: 0;
  padding: 0;
  
  ion-item {
    --padding-start: 16px;
    --padding-end: 16px;
    --inner-padding-end: 0;
    --border-radius: 0;
    --background: var(--ion-background-color);
    
    &:not(:last-child) {
      --border-width: 0 0 0.5px 0;
      --border-color: var(--ion-color-step-150);
    }
    
    &:hover {
      --background: var(--ion-color-step-50);
    }
  }
}

.deck-item {
  cursor: pointer;
  transition: background-color 0.2s ease;
}

.deck-color-indicator {
  width: 4px;
  height: 40px;
  border-radius: 2px;
  margin-right: 12px;
  flex-shrink: 0;
}

.deck-title {
  font-size: 17px;
  font-weight: 500;
  color: var(--ion-color-dark);
  margin: 0 0 2px 0;
  line-height: 1.3;
}

.deck-subtitle {
  font-size: 14px;
  color: var(--ion-color-primary);
  margin: 0 0 4px 0;
  line-height: 1.3;
}

.deck-stats {
  font-size: 13px;
  color: var(--ion-color-secondary);
  margin: 0;
  line-height: 1.2;
}

.deck-actions-list {
  display: flex;
  gap: 8px;
  align-items: center;
  
  ion-button {
    --padding-start: 12px;
    --padding-end: 12px;
    --padding-top: 12px;
    --padding-bottom: 12px;
    --border-radius: 8px;
    min-width: 44px;
    min-height: 44px;
    
    // Outline button styling - ensure icons match border colors
    &[fill="outline"] {
      // Make icons match the outline border color with !important to override Ionic defaults
      &[color="primary"] ion-icon {
        color: var(--ion-color-primary) !important;
      }
      
      &[color="success"] ion-icon {
        color: var(--ion-color-success) !important;
      }
      
      &[color="medium"] ion-icon {
        color: var(--ion-color-medium) !important;
      }
      
      &[color="danger"] ion-icon {
        color: var(--ion-color-danger) !important;
      }
      
      // For buttons without color attribute (Edit button)
      &:not([color]) ion-icon {
        color: var(--ion-color-medium) !important;
      }
    }
    
    ion-icon {
      font-size: 20px;
      font-weight: 500;
    }
    
    // Hover effect
    &:hover {
      transform: translateY(-1px);
      box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
      transition: all 0.2s ease;
    }
    
    // Active/pressed state
    &:active {
      transform: translateY(0);
      transition: all 0.1s ease;
    }
  }
}

.deck-info {
  flex: 1;
  
  ion-card-title {
    font-size: 18px;
    font-weight: 600;
    margin-bottom: 4px;
  }
  
  ion-card-subtitle {
    font-size: 14px;
    opacity: 0.7;
    line-height: 1.4;
  }
}

.deck-stats {
  display: flex;
  gap: 24px;
  margin: 16px 0;
}

.stat-item {
  display: flex;
  flex-direction: column;
  align-items: center;
  
  .stat-number {
    font-size: 24px;
    font-weight: bold;
    color: var(--deck-color, var(--ion-color-primary));
  }
  
  .stat-label {
    font-size: 12px;
    color: var(--ion-color-medium);
    text-transform: uppercase;
    letter-spacing: 0.5px;
  }
}

.due-cards {
  margin: 12px 0;
  padding: 8px 12px;
  background: var(--ion-color-light);
  border-radius: 8px;
  text-align: center;
  
  ion-text {
    font-size: 14px;
    font-weight: 500;
  }
}

.deck-actions {
  display: flex;
  flex-direction: column;
  gap: 8px;
  margin-top: 16px;
  
  ion-button {
    --border-radius: 12px;
    margin: 0;
  }
}

.action-row {
  display: flex;
  gap: 8px;
  
  ion-button {
    flex: 1;
  }
}

.empty-state {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  text-align: center;
  padding: 60px 20px;
  min-height: 400px;
  
  .empty-icon {
    font-size: 80px;
    color: var(--ion-color-medium);
    margin-bottom: 24px;
  }
  
  h2 {
    color: var(--ion-color-dark);
    margin-bottom: 12px;
    font-size: 24px;
  }
  
  p {
    color: var(--ion-color-medium);
    margin-bottom: 32px;
    line-height: 1.5;
    max-width: 300px;
  }
}

.create-deck-btn {
  --border-radius: 12px;
  max-width: 250px;
}

// Responsive design
@media (max-width: 768px) {
  .decks-grid {
    grid-template-columns: 1fr;
  }
  
  .deck-stats {
    justify-content: space-around;
  }
}

// Dark mode support
@media (prefers-color-scheme: dark) {
  .due-cards {
    background: var(--ion-color-dark-shade);
  }
}
